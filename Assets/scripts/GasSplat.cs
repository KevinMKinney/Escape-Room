using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/* 
 * Written this semester.
 * 
 * Allows the current gameobject to get destroyed upon hitting an object, possably leaving a stain.
 */
//This one line was generated by unity.
public class GasSplat : MonoBehaviour
{
    //The material to use for the stain.
    public Material gasSplatMaterial;
    //The the parent to assign the projector.
    public GameObject projectorParent;
    //Whether this gameobject is scheduled to be destroyed.
    bool isDestoying;

    //Schedules the gameObject to be destroyed in an eighth of a second.
    public IEnumerator DestroyTimeOut()
    {
        yield return new WaitForSeconds(0.2f);
        Destroy(gameObject);
    }

    private void OnCollisionEnter(Collision collision)
    {
        //Check if the collided object is not the gas can or another blob and it is not already being destroyed.
        if (collision.gameObject.name != "Gas Can" && collision.gameObject.name != "GasBlob" && !isDestoying) 
        {
            //The object is going to be destroyed.
            isDestoying = true;

            //There is a one in sixteenth chance to create a splatter.
            if (Random.Range(0, 17) == 0)
            {
                /*
                 * Projectors in unity project a texture to a surface. 
                 * The following creates a projecter that will project a blob shaped yellow texture, making it look like it stained the object.
                 */

                //Create the projecter Gameobject and the projecter componant.
                GameObject projectorGO = new GameObject("ProjectorBlob");
                Projector projector = projectorGO.AddComponent<Projector>();
                //Get a reference to the rigidbody.
                Rigidbody rb = GetComponent<Rigidbody>();
                //Set the project's materail.
                projector.material = gasSplatMaterial;
                //Makes the blob look smaller.
                projector.fieldOfView = 20;
                //Assign how far the texture will be projected.
                projector.farClipPlane = 1.25f;
                projector.nearClipPlane = 0.1f;
                //Move projecter to world orgin.
                projectorGO.transform.position = Vector3.zero;
                //Look at the rigidbody's velocity to make it look in the direction the rigidbody was travelling.
                projectorGO.transform.LookAt(rb.velocity);
                //Move projecter to the current gameobject location.
                projectorGO.transform.position = transform.position;
                //Move the projecter forward a little bit.
                projectorGO.transform.position += transform.forward * 0.4f;
                //Set the parent to keep the hierarchy clean.
                projectorGO.transform.SetParent(projectorParent.transform);
            }
            //Destroy the current Game Object in an eighth of a second.
            StartCoroutine("DestroyTimeOut");
        }
    }
}
